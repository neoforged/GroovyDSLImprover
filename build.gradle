import net.neoforged.gradleutils.PomUtilsExtension

plugins {
    id 'java'
    id 'groovy'
    id 'maven-publish'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'net.neoforged.gradleutils' version '3.0.0-alpha.4'
}

group = 'net.neoforged'
version = gradleutils.version

gradleutils {
    setupSigning()
    setupCentralPublishing()
}

sourceSets {
    runtime {}
    base {}
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
    withJavadocJar()
    withSourcesJar()

    registerFeature('runtime') {
        usingSourceSet(sourceSets.runtime)
        withJavadocJar()
        withSourcesJar()
    }

    registerFeature('base') {
        usingSourceSet(sourceSets.base)
        withJavadocJar()
        withSourcesJar()
    }
}

changelog {
    from '1.0'
}

repositories {
    mavenCentral()
}

license {
    header = file('LICENSE-header')
    include '**/*.java'
    include '**/*.groovy'
}

dependencies {
    implementation sourceSets.runtime.output
    implementation gradleApi()

    runtimeImplementation gradleApi()

    baseImplementation gradleApi()
    baseImplementation(project(":")) {
        capabilities {
            requireCapability("net.neoforged:groovydslimprover-runtime")
        }
    }
    baseImplementation(project(":"))

    compileOnly 'org.jetbrains:annotations:24.0.0'

    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

tasks.withType(Jar).configureEach {
    manifest.attributes([
            'Specification-Title'   : 'GroovyDSLImprover',
            'Specification-Vendor'  : 'neoforged',
            'Implementation-Title'  : project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor' : 'neoforged',
            'Git-Commit'            : gradleutils.gitInfo.abbreviatedId
    ])
}

tasks.withType(GroovyCompile).configureEach {
    options.incremental = true
    groovyOptions.optimizationOptions.indy = true
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
            gradleutils.sign(it)

            pom {
                name = 'GroovyDSLImprover'
                description = 'Groovy Compiler Plugin to improve building Groovy based DSLs, like those used in Gradle.'
                pomUtils.license(it, PomUtilsExtension.License.LGPL_v2)
                pomUtils.githubRepo(it, 'GroovyDSLImprover')

                developers {
                    developer {
                        id = 'matyrobbrt'
                        name = 'matyrobbrt'
                    }
                }
            }
        }
    }
    repositories {
        maven gradleutils.publishingMaven
    }
}
